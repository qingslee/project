function [hog_Feature] = HOG(detectedImg, options)
% -------------------------------------------------------------------------
% Êµï¿½ï¿½HOGï¿½ï¿½Histogram of gradientï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½È¡ï¿½ï¿½ï¿?
%
% detectedImg-- ï¿½ï¿½â´°ï¿½Ú°ï¿½ï¿½Í¼ï¿½ñ£¨»Ò¶ï¿½Í¼ï¿½ï¿½
% options-- ï¿½ï¿½ï¿½ï¿½á¹¹ï¿½å£¬ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ã£ï¿?
%            cellH, cellWï¿½ï¿½ï¿½ï¿½Ôªï¿½ï¿½Ð¡  
%            blockH, blockWï¿½ï¿½ï¿½ï¿½ï¿½Ð?
%            winH, winWï¿½ï¿½ï¿½ï¿½â´°ï¿½Ú´ï¿½Ð?   
%            strideï¿½ï¿½ï¿½ï¿½ï¿½Æ¶ï¿½ï¿½ï¿½ï¿½ï¿½
%            binsï¿½ï¿½Ö±ï¿½ï¿½Í¼ï¿½ï¿½ï¿½ï¿½    
%            flagï¿½ï¿½ï¿½Ý¶È·ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ä£?:[0,pi],1:[0,2*pi]ï¿½ï¿½
%            epsilon: ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½Ä³ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
% @hog_Feature-- ï¿½ï¿½â´°ï¿½ï¿½Í¼ï¿½ï¿½ï¿½Ó¦ï¿½ï¿½HOGï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ð¡Îª1*Mï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
%    M = ((winH-blockH)/stride+1)*((winW-blockW)/stride+1)...
%        *(blockW/cellW)*(blockH/cellH) * bins
%
% HOGï¿½ï¿½ï¿½ï¿½ï¿½ï¿½È¡ï¿½ï¿½ï¿½è£º
% ----------------
% step 1.ï¿½ï¿½ï¿½ï¿½Dalalï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½áµ½É«ï¿½Êºï¿½Ù¤ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ÕµÄ½ï¿½ï¿½Ã»ï¿½ï¿½Ó°ï¿½ì£¬ï¿½ï¿½Ê¡ï¿½Ô¸Ã²ï¿½ï¿½è£?
% ï¿½ï¿½ï¿½ï¿½[-1,0,1]ï¿½ï¿½[1,0,-1]'ï¿½Ö±ï¿½ï¿½ï¿½ï¿½Í¼ï¿½ï¿½ï¿½xï¿½ï¿½ï¿½ï¿½ï¿½yï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ý¶ï¿?ï¿½ï¿½ï¿½ï²»ï¿½ï¿½ï¿½ï¿½Sobelï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
% ï¿½ï¿½Ôµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ý¶È£ï¿½ï¿½ï¿½ï¿½ï¿½Îªï¿½ï¿½ï¿½Ç¶ï¿½Í¼ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Æ½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ý¶È£ï¿½ï¿½ï¿½ï¿½ï¿½á¶ªÊ§ï¿½Ü¶ï¿½ï¿½Ý¶ï¿½ï¿½ï¿½Ï¢ï¿½ï¿½
% È»ï¿½ï¿½ï¿½ï¿½ï¿½Ã¿ï¿½ï¿½ï¿½ï¿½ï¿½Øµï¿½ï¿½Ó¦ï¿½ï¿½ï¿½Ý¶È·ï¿½Öµï¿½Í·ï¿½ï¿½ï¿½
%    ||grad|| = |grad_x| + |grad_y|ï¿½ï¿½ï¿½ï¿½||grad|| = sqrt(grad_x^2+grad_y^2)ï¿½ï¿½
%    gradOri = arctan(grad_y/grad_x) ï¿½ï¿½gradOriï¿½ï¿½ï¿½ï¿½(-pi/2,pi/2)ï¿½ï¿½
% ï¿½Ú¸ï¿½Ý²ï¿½ï¿½ï¿½flagï¿½ï¿½Ã¿ï¿½ï¿½ï¿½ï¿½ï¿½Øµï¿½ï¿½ï¿½Ý¶È·ï¿½ï¿½ï¿½Ó³ï¿½äµ½ï¿½ï¿½Ó¦ï¿½ï¿½ï¿½ï¿½ï¿½,ï¿½ï¿½ï¿½flagÎª0ï¿½ï¿½Ñ¡ï¿½ï¿½ï¿½ï¿½ï¿½[0,pi]
% Î»ï¿½ï¿½(i,j)Î»ï¿½ï¿½ï¿½ï¿½ï¿½Øµï¿½Ä·ï¿½ï¿½ï¿½Î? 
%       gradOri(i,j)=gradOri(i,j)<0?gradOri(i,j)+pi, gradOri(i,j)ï¿½ï¿½
% ï¿½ï¿½ï¿½flagÎª1Ñ¡ï¿½ï¿½ï¿½ï¿½ï¿½Îª[0,2*pi],ï¿½ï¿½Ê±ï¿½ï¿½Òªï¿½ï¿½ï¿½grad_xï¿½ï¿½grad_yï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ð¶Ï£ï¿½
%  (1)grad_x>=0&&grad_y>=0(ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½) gradOri(i,j)=arctan(grad_y/grad_x)ï¿½ï¿½
%  (2)grad_x<0&&grad_y>=0(ï¿½Ú¶ï¿½ï¿½ï¿½ï¿½ï¿½)  gradOri(i,j)=arctan(grad_y/grad_x)+piï¿½ï¿½
%  (3)grad_x<0&&grad_y<0(ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½)   gradOri(i,j)=arctan(grad_y/grad_x)+piï¿½ï¿½
%  (4)grad_x>=0&&grad_y<0(ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½)  gradOri(i,j)=arctan(grad_y/grad_x)+2*piï¿½ï¿½
% ------------------
% step 2.Îªï¿½Ë±ï¿½ï¿½ï¿½ï¿½ï¿½â£¬Ö±ï¿½ï¿½Ð´ï¿½ï¿½ï¿½Ä²ï¿½Ñ­ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ñ­ï¿½ï¿½ï¿½ï¿½Î»block,ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ã¶¨Î»cell;
% Ò»ï¿½ï¿½blockï¿½ï¿½Ó¦(blockH*blockW/(cellH*cellW)*binsï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ã¿ï¿½ï¿½cellï¿½ï¿½Ó¦1*bins
% ï¿½ï¿½Ö±ï¿½ï¿½Í¼ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½blockï¿½ï¿½Ö±ï¿½ï¿½Í¼ï¿½Úºï¿½ï¿½ï¿½calHistï¿½ï¿½ï¿½ï¿½É£ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ö±ï¿½ï¿½Í¼ï¿½ï¿½Òª×¢ï¿½ï¿½ï¿½ï¿½ï¿½ã£º
% (1)ï¿½ï¿½ï¿½ï¿½cellÖ±ï¿½ï¿½Í¼Ê±ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Øµï¿½ï¿½Ý¶È·ï¿½Öµï¿½ï¿½ï¿½ï¿½È¨ÖµÍ¶Ó°ï¿½ï¿½Í¶Ó°Ê±ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ä·½Ê½ï¿½ï¿½ï¿½ï¿½
% ï¿½ï¿½ï¿½Ã²ï¿½Öµï¿½Ä·ï¿½Ê½ï¿½ï¿½ï¿½ï¿½Í¶Ó°ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ý¶È·ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Äµï¿½Ä¾ï¿½ï¿½ï¿½ï¿½ï¿½Ð²ï¿½Öµï¿½ï¿½
% (2)Dalalï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½áµ½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½R-HOGï¿½ï¿½ï¿½Ô£ï¿½ï¿½ï¿½ï¿½ï¿½Ö±ï¿½ï¿½Í¼Ç°ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½blockï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½Ë¹ï¿½ï¿½ï¿½ï¿½
% ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ô½ï¿½ï¿½ï¿½blockï¿½ß½ï¿½ï¿½ï¿½ï¿½Øµï¿½ï¿½È¨ï¿½Ø£ï¿½Ö±ï¿½ï¿½Í¼Í¶Æ±Öµï¿½ï¿½Ô­ï¿½ÈµÄ·ï¿½Öµï¿½ï¿½Îªï¿½ï¿½Öµï¿½Í¸ï¿½Ë¹ï¿½Ë»ï¿?
% (3)ï¿½ï¿½ï¿½blockÖ±ï¿½ï¿½Í¼ï¿½Ä¼ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Òªï¿½ï¿½ï¿½ï¿½ï¿½blockï¿½ï¿½Î§ï¿½Ú½ï¿½ï¿½ï¿½Ö±ï¿½ï¿½Í¼ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½
% ï¿½ï¿½Ê½ï¿½Ð¶ï¿½ï¿½Ö£ï¿½ï¿½ï¿½ï¿½ï¿½Ä¬ï¿½Ï²ï¿½ï¿½ï¿½L2-norm(hist=hist/sqrt(hist^2+epsilon^2)).
% ------------------
% step 3.ï¿½Ï²ï¿½ï¿½ï¿½â´°ï¿½ï¿½ï¿½Ðµï¿½ï¿½ï¿½ï¿½ï¿½blockï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½HOGï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
%
% ×¢ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ì»ï¿½ï¿½æ¼°ï¿½ï¿½Ò»Ð©Ï¸ï¿½Ú£ï¿½ï¿½ï¿½ï¿½çµ¼ï¿½ï¿½Í¼ï¿½ï¿½ß¶Èºï¿½ï¿½ï¿½ï¿½ÃµÄ¼ï¿½â´°ï¿½Ú´ï¿½Ð¡ï¿½ï¿½Í¬Ê±ï¿½ï¿½ï¿½ï¿½Òª
% ï¿½ï¿½É³ß¶ï¿½ï¿½ï¿½ï¿½Å£ï¿½ï¿½ï¿½ï¿½ï¿½Í¼ï¿½ï¿½ï¿½Ý¶ï¿½Ê±ï¿½ï¿½ï¿½ß½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Î´ï¿½ï¿?ï¿½ï¿½Ö±ï¿½ï¿½ï¿½ï¿½ï¿?ï¿½ï¿½ï¿½Ç¸ï¿½ï¿½Æ±ß½ç£¬ï¿½ï¿½ï¿½ï¿½
% Ö±ï¿½ï¿½ï¿½ï¿½ï¿?ï¿½ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ú¼ï¿½ï¿½ï¿½blockÖ±ï¿½ï¿½Í¼Ê±ï¿½ï¿½Ã»ï¿½Ð½ï¿½ï¿½ï¿½ï¿½ï¿½Î¬ï¿½ï¿½Öµï¿½ï¿½ï¿½ï¿½Ã¿ï¿½ï¿½ï¿½ï¿½Ôªï¿½Ðµï¿½ï¿½ï¿½
% ï¿½Øµï¿½Ö»ï¿½Ô¸Ãµï¿½Ôªï¿½ï¿½Í¶Æ±ï¿½ï¿½È¨ï¿½ï¿½ï¿½ï¿½ï¿½Ôµï¿½Ç°blockï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ÔªÃ»ï¿½ï¿½Ó°ï¿½ì¡£
%
% Author: L.L.He
% Time: 6/8/2014
% -------------------------------------------------------------------------
tic;
assert(nargin>=1);
if ~exist('options', 'var')
    % ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ã»ï¿½ï¿½Ö¸ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Îªï¿½ï¿½ï¿½ï¿½Ä¬ï¿½ï¿½Öµ
    options = struct;
    options.cellH = 8;   options.cellW = 8;
    options.blockH = 16; options.blockW = 16;
    options.winH = 32;   options.winW = 256;
    options.stride = 8;  options.bins = 9;
    options.flag = 1;    options.epsilon = 1e-4;
end
% ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ä´ï¿½ï¿½ï¿½Í¼ï¿½ï¿?
[r, c, d] = size(detectedImg);
if d ~= 1
    % ï¿½ï¿½Òª×ªï¿½ï¿½Îªï¿½Ò¶ï¿½Í¼
    detectedImg = rgb2gray(detectedImg);
end
detectedImg = double(detectedImg);
if r~=options.winH && c~=options.winW
    % ï¿½ï¿½Ý¼ï¿½â´°ï¿½ÚµÄ´ï¿½Ð¡ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Í¼ï¿½ï¿½ï¿½ï¿½Ð³ß¶ï¿½ï¿½ï¿½ï¿½ï¿?ï¿½ï¿½ï¿½ï¿½Ë«ï¿½ï¿½ï¿½Ô²ï¿½Öµ)
    detectedImg = imresize(detectedImg, [options.winH options.winW],...
                           'bilinear');
end

% step 1--ï¿½ï¿½ï¿½ï¿½1-Dï¿½ï¿½Ö¾ï¿½ï¿½Ë¼ï¿½ï¿½ï¿½xï¿½ï¿½ï¿½ï¿½ï¿½yï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Ý¶È£ï¿½ï¿½ï¿½Öµï¿½Í·ï¿½ï¿½ï¿?
mask = [-1, 0, 1];
[grad, gradOri] = calGrad(detectedImg, mask, options.flag);

% ï¿½ï¿½ï¿½blockï¿½Ä´ï¿½Ð¡ï¿½ï¿½ï¿½ï¿½ï¿½Ë¹ï¿½ï¿?
sigma = min(options.blockH, options.blockW)*0.5;
sigma_2 = sigma.^2;
[X, Y] = meshgrid(0:options.blockW-1,0:options.blockH-1);
X = X - (options.blockW-1)/2;
Y = Y - (options.blockH-1)/2;
gaussWeight = exp(-(X.^2+Y.^2)/(2*sigma_2));

% ï¿½ï¿½ï¿½ï¿½Ò»ï¿½ï¿½ï¿½ï¿½Î¬ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½blockï¿½ï¿½Ö±ï¿½ï¿½Í¼
r_tmp = (options.winH-options.blockH)/options.stride+1;
c_tmp = (options.winW-options.blockW)/options.stride+1;
b_tmp = options.bins *(options.blockH*options.blockW)/...
        (options.cellH*options.cellW);
blockHist = zeros(r_tmp, c_tmp, b_tmp);

% step 2--ï¿½ï¿½ï¿½ï¿½ï¿½â´°ï¿½ï¿½ï¿½ï¿½Ã¿ï¿½ï¿½blockï¿½ï¿½Ö±ï¿½ï¿½Í¼(HOGï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½)
for i=1:options.stride:(options.winH-options.blockH+1)
    for j=1:options.stride:(options.winW-options.blockW+1)
        block_grad = grad(i:i+options.blockH-1,j:j+options.blockW-1);
        block_gradOri = gradOri(i:i+options.blockH-1,j:j+options.blockW-1);
        % ï¿½ï¿½ï¿½ãµ¥ï¿½ï¿½blockï¿½ï¿½Ö±ï¿½ï¿½Í¼ï¿½ï¿½Í¶Æ±ÖµÎªï¿½Ý¶È·ï¿½Öµï¿½Í¸ï¿½Ë¹È¨ï¿½ØµÄ³Ë»ï¿½ï¿½ï¿½ï¿?
        % ï¿½ï¿½ï¿½Ð¹ï¿½Ò»ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
        block_r = floor(i/options.stride)+1;
        block_c = floor(j/options.stride)+1;
        blockHist(block_r,block_c,:) = calHist(block_grad.*gaussWeight, ...
                           block_gradOri, options);
    end
end

% step 3--ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½blockï¿½ï¿½Ö±ï¿½ï¿½Í¼Æ´ï¿½Ó³ï¿½Ò»Î¬ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Îªï¿½ï¿½â´°ï¿½Úµï¿½HOGï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½
hog_Feature = reshape(blockHist, [1 numel(blockHist)]);
toc;
end



